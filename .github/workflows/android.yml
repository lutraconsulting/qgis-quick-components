name: Android
on: [push]
env:
  SDK_VERSION: android-20

jobs:
  android_build:
    if: ( github.repository == 'lutraconsulting/input' ) && (!contains(github.event.head_commit.message, 'Translate '))
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [armeabi-v7a, arm64-v8a]
    steps:
      - uses: actions/checkout@v2
      - name: Install Deps
        run: |
          sudo apt update && sudo apt install -y python3-pip gem openssl
          sudo gem update bundler
          pip3 install dropbox
          gem --version
          python3 --version

      - name: Extract Mergin API_KEY
        env:
          MERGINSECRETS_DECRYPT_KEY: ${{ secrets.MERGINSECRETS_DECRYPT_KEY }}
        run: |
          openssl aes-256-cbc -k $MERGINSECRETS_DECRYPT_KEY -in app/merginsecrets.cpp.enc -out app/merginsecrets.cpp -d -md md5


      - name: Extract GPS keystore
        env:
          INPUTKEYSTORE_DECRYPT_KEY: ${{ secrets.INPUTKEYSTORE_DECRYPT_KEY }}

        run: |
          openssl aes-256-cbc -k $INPUTKEYSTORE_DECRYPT_KEY -in Input_keystore.keystore.enc -out Input_keystore.keystore -d -md md5

      - name: Build and Upload
        env:
          ARCH: ${{ matrix.arch }}
          DROPBOX_TOKEN: ${{ secrets.INPUTAPP_BOT_DROPBOX_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.INPUTAPP_BOT_GITHUB_TOKEN }}
          INPUTKEYSTORE_STOREPASS: ${{ secrets.INPUTKEYSTORE_STOREPASS }}

        run: |
          if  [[ ${{ github.ref }} == refs/tags/* ]]
          then
              export GIT_TAG="${GITHUB_REF//refs\/tags\//}"
              export GIT_BRANCH=""
          else
              export GIT_TAG=""
              export GIT_BRANCH="${GITHUB_REF//refs\/heads\//}"
          fi
          echo "GIT_TAG: $GIT_TAG"
          echo "GIT_BRANCH: $GIT_BRANCH"

          docker pull lutraconsulting/input-sdk:${SDK_VERSION}
          docker run -v $(pwd):/usr/src/input -e "BUILD_FOLDER=build-${ARCH}" -e "ARCH=${ARCH}" -e "INPUTKEYSTORE_STOREPASS=${INPUTKEYSTORE_STOREPASS}" -e "VERSION=${GIT_TAG}" lutraconsulting/input-sdk:${SDK_VERSION} /usr/src/input/scripts/docker-build.sh
          ./scripts/upload-artifacts.sh
